@model Transpo.WebApp.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<div class="ui container">
    <h2 class="ui dividing eader">@ViewBag.Title</h2>

    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "ui form registerform", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4 class="ui dividing header">Create a new account</h4>

        @Html.ValidationSummary(true, "", new { @class = "ui error message", @style = "display:block;" })

        <div class="ui stackable grid">
            <div class="four wide column">
                <div class="field">
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email)
                </div>
                <div class="field">
                    @Html.LabelFor(m => m.Password)
                    @Html.PasswordFor(m => m.Password)
                </div>
                <div class="field">
                    @Html.LabelFor(m => m.ConfirmPassword)
                    @Html.PasswordFor(m => m.ConfirmPassword)
                </div>

                <div class="field">
                    @Html.LabelFor(m => m.Name)
                    @Html.TextBoxFor(m => m.Name)
                </div>

                <div class="field">
                    @Html.LabelFor(m => m.Age)
                    @Html.TextBoxFor(m => m.Age, new { @type = "number" })
                </div>
                <div class="field">
                    @Html.LabelFor(m => m.Gender)
                    @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>()
                        {
                            new SelectListItem { Text = "Male", Value = "1", Selected = true },
                            new SelectListItem { Text = "Female", Value = "2" }
                        })
                </div>
                <div class="field">
                    @Html.LabelFor(m => m.Phone)
                    @Html.TextBoxFor(m => m.Phone)
                </div>

                <button type="submit" class="ui primary button" value="Register" id="btnRegister">Register</button>
            </div>
        </div>
    }
</div>

<script>
    $.fn.form.settings.rules.matchPasswords = function (value) {
        return $('#Password').val() === value;
    }

    $('.ui.form.registerform').form({
        fields: {
            email: {
                identifier: 'Email',
                rules: [
                    {
                        type: 'empty',
                        prompt: 'Please enter an email'
                    },
                    {
                        type: 'email',
                        prompt: 'Please enter a valid email'
                    }
                ]
            },
            password: {
                identifier: 'Password',
                rules: [
                {
                    type: 'empty',
                    prompt: 'Please enter a new password'
                },
                {
                    type: 'length[6]',
                    prompt: 'Your password must be at least 6 characters'
                }
                ]
            },
            confirmPassword: {
                identifier: 'ConfirmPassword',
                rules: [
                {
                    type: 'empty',
                    prompt: 'Please confirm the password'
                },
                {
                    type: 'matchPasswords',
                    prompt: 'Your passwords must match'
                }
                ]
            },
            phone: {
                identifier: 'Phone',
                rules: [
                    {
                        type: 'regExp[/^(07(0|1|2|5|6|7|8)([0-9]{6}))$|^(07(0|1|2|5|6|7|8)\-([0-9]{3})\-([0-9]{3}))$/]',
                        prompt: 'Телефонскиот број не е валиден'
                    }
                ]
            }
        },
        inline: true,
        onSuccess: function (e, data) {
            $('#btnRegister').addClass('loading');
        }
    });
</script>